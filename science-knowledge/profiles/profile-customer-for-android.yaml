#  自定义配置文件，大小写敏感!


# Port of HTTP(S) proxy server on the local end
# port: 7890

# Port of SOCKS5 proxy server on the local end
# socks-port: 7891

# (HTTP and SOCKS5 in one port) 局域网代理需使用混合端口
mixed-port: 7890

# Transparent proxy server port for Linux and macOS (Redirect TCP and TProxy UDP)
# redir-port: 7892

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893

allow-lan: false   # 局域网覆盖，连接同一个网络，将其它设备的网络代理指向开启 clash 设备的 IP 及代理端口
bind-address: "*"  # 局域网覆盖的地址，* 表示所有
mode: rule
log-level: info
# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: false
external-controller: 127.0.0.1:9090


##### Clash 开启 tun 模式无法上网（显示无法连接到 internet）时，把 Clash 创建的虚拟网卡的 internet 连接共享（ICS）禁用后再启用可以解决问题
##### 或者在"网络连接"面板中把所有不支持设置 ICS 的连接（例如：传入的连接）删除

# DNS 设置对于 `Clash For Windows v.020.39` 系统代理模式无效，仅在 TUN 模式下生效，需要在 Clash 页面中配置，
# 且即使在 TUN 模式下，DNS 解析也不一定全走 Clash 配置的 DNS 服务器，最好给电脑的网络适配器指定 DNS 服务器，当不走 Clash 配置时还能有个兜底的设置。
# 这里的设置作为版本兼容(低版本和 Android 版)配置
dns:
  enabled: true
  listen: 0.0.0.0:1053
  ipv6: false
  default-nameserver:            # DNS servers, 仅 Do53 协议，即：纯 IP 
    - 1.1.1.1                    # Cloudflare 
    - 8.8.8.8                    # google 
  # 伪 IP，设备接收到域名需要进行 DNS 解析拿到 IP 建立连接才能发送请求
  # Clash 直接返回一个假的 IP，让设备与假 IP 建立连接并发送请求，从而避免本地 DNS 解析
  enhanced-mode: fake-ip         # 默认 fake-ip
  fake-ip-range: 198.18.0.1/16   # Fake IP addresses pool CIDR
  fake-ip-filter:                # 对以下 IP 不返回 fake IP，返回真实 IP
    - '*.lan'
    - '*.msftconnecttest.com'

proxies:
  - {name: 仅考虑将数量较少的策略组加入自动选择, type: http, server: 127.0.0.1, port: 443}


# 策略组
proxy-groups:
  # - name: URL-TEST                              # 策略组名称
  #   type: url-test                              # 策略组类型。select: 手动选择。url-test: 自动选择，通过 `url` 对节点进行测试，选取延时最低的节点。
  #   interval: 300                               # 测速时间间隔
  #   url: http://www.gstatic.com/generate_204    # 测速网址
  #   proxies:                                    # 可引用节点，也可引用其他策略组（因为每个策略组都会选用一个节点，因此一个策略组也被视为一个节点）。无法引用代理供应商。
  #     - proxy1                                  # 存在 `proxies` 的策略组不能与代理供应商同名，因为二者都具有节点集的性质。
  #     - proxy2                                  # 如果策略组作为节点集（`proxies`），且类型为自动选择（`url-test`），则健康检查参数（`interval` 和 `url`）不可少。
  #   use:                                        # 只能引用代理供应商，不能引用其他策略组。
  #     - proxy-provide1
  #     - proxy-provide2
  #
  # ################ 补充说明 ################
  # `interval` 属性与节点的自动选择并不是"完全"的触发关系，因为对于 `use`，它有自己的一套测速机制，"自动选择"只是在已测速节点中选择一个延时最低的节点。
  # "自动选择" 取决于节点的测速结果，而 `proxies` 和 `use` 下的节点的测速结果又取决于它们各自的 `interval` 和 `url` 属性。

  - name: SELECT-PROXY
    type: select
    proxies:
      - AUTO-SELECT
      - DEFAULT
      - ermaozi
      - crazygeeky.com
      - proxypool
      - tt.vg-mBFNB

  - name: AUTO-SELECT
    type: url-test
    interval: 864000
    url: http://www.gstatic.com/generate_204
    proxies:
      - 仅考虑将数量较少的策略组加入自动选择
    use:
      - DEFAULT
      - crazygeeky.com

  - name: DEFAULT
    type: select
    use:
      - DEFAULT

  - name: ermaozi
    type: select
    use:
      - ermaozi

  - name: crazygeeky.com
    type: select
    use:
      - crazygeeky.com

  - name: proxypool
    type: select
    use:
      - proxypool

  - name: tt.vg-mBFNB
    type: select
    use:
      - tt.vg-mBFNB


# 代理供应商
proxy-providers:
  #############################################################
  #
  # proxy-provider-example:                                   # 代理（节点）供应商名字。一个代理供应商作为一个节点集。
  #   type: http                                              # 有两种类型：http: 通过 http 链接（`url`）获取。file: 通过 `path` 路径读取本地文件
  #   url: https://domain.com/clash-nodes-example.yaml        # 下载链接，文件下载后会保存到 `path` 路径下
  #   path: ./proxy-providers/clash-nodes-example.yaml        # 节点文件读取路径
  #   interval: 21600                                         # 隔多少秒从网络上拉取一次资源
  #   health-check:                                           # 节点健康检查配置
  #     enable: true                                          # 是否允许健康检查
  #     interval: 300                                         # 隔多少秒进行一次健康检查
  #     url: http://www.gstatic.com/generate_204              # 测速网址
  #
  #############################################################

  DEFAULT:
    type: http
    url: https://url-transfer.deno.dev?content=eatAmxY6vwOYLWQlzQx1dw%3D%3D%2CeGYaO1MkZaBVWhEebLsQyBxpoNfd882uIOpC9psrfZcC4QsNpwGeiC9yK2F5NlqhxV0BT4T3rn0rDf4CtG9f%2FL4mjv10Eyq18hZOHvx%2BphzfuE2AwqygUGkfP46gvNP%2BXhGYUGOs2VoypwJ43MrkgoE%2B2Di4cQEu5%2BPKqb%2FA20FvBQ%3D%3D
    path: ./providers/proxy/default.yaml
    interval: 21600
    health-check:
      enable: true
      interval: 1200
      url: http://www.gstatic.com/generate_204

  ermaozi:
    type: http
    url: https://url-transfer.deno.dev?content=0D46uE0B8%2Bv2w%2F7Ei5pCtA%3D%3D%2CX%2BwFqcHMRLyt%2By1FhKlWuzq0GPozfJs%2FyUO1SK71Io6q5fFGsO2Gw0HCnJXqgrBaWqQ%2B8ogeeJLbadMW3U0LrNselJ32LL1d%2BrVNV%2B4PmyIxYMT2tHZUn%2BlELXnOZHDa
    path: ./providers/proxy/ermaozi.yaml
    interval: 21600
    health-check:
      enable: false
      interval: 86400
      url: http://www.gstatic.com/generate_204

  crazygeeky.com:
    type: http
    url: https://url-transfer.deno.dev?content=TcW9BT5QFRe4U0d65pF5Vw%3D%3D%2CZrt0s3Hf4DR14vpN%2FDyFWLmnce1je64St4RXz1t%2FH1nRkpggwDteIraUhgOZTVSe7iYyU6sQFQ4G5w%3D%3D
    path: ./providers/proxy/crazygeeky.com.yaml
    interval: 21600
    health-check:
      enable: true
      interval: 900
      url: http://www.gstatic.com/generate_204

  proxypool:
    type: http
    url: https://url-transfer.deno.dev?content=%2B5i06dEZlKaMSpw52nBduQ%3D%3D%2CAULjuDsJh1gpXDCdxgWUGmmGn1IWXsLm9pLD%2Bm95150ha7aBrFcAAw5Qkp7eSlV%2B%2BoKZtg%3D%3D
    path: ./providers/proxy/proxypool.yaml
    interval: 21600
    health-check:
      enable: false
      interval: 864000
      url: http://www.gstatic.com/generate_204

  tt.vg-mBFNB:
    type: http
    url: https://url-transfer.deno.dev/?content=sdWmH%2BiEiTAyMas4ENy5tg%3D%3D%2CKJB3oe4ymWyq90p5qLA%2B0%2F%2BDIRTCtaj%2BfjbpMOabtsDuYuU%3D
    path: ./providers/proxy/tt.vg-mBFNB.yaml
    interval: 21600
    health-check:
      enable: true
      interval: 3600
      url: http://www.gstatic.com/generate_204



# 规则供应商，类似节点供应商
#
# 规则类型 `behavior` 有 3 种：
#   1. classical: 经典的配置方式：类型, 条件。例: - IP-CIDR,0.0.0.0/32,no-resolve。classical 不支持通配符，引号字符('") 被视为普通字符串。
#   2. ipcidr: 基于 IP 地址和 CIDR（Classless Inter-Domain Routing 无类别域间路由）的匹配。
#   3. domain: 如果内容是一串使用引号('") 引住的字符串，则可以使用通配符（参考 Clash 通配符），否则对字符进行完全匹配。
rule-providers:
  #############################################################
  # ------------------- 参考代理供应商的描述 -------------------
  # rule-provider-example:
  #   type: http                                               # 规则供应商类型，有 http 和 file 两种
  #   behavior: classical                                      # 规则类型
  #   url: http://domain.com/rule-provider-example.yaml
  #   path: ./ruleset/rule-provider-example.yaml
  #
  #############################################################

  reject-custom: # 自定义黑名单，大范围匹配时使用
    type: http
    behavior: classical
    url: https://url-transfer.deno.dev/?content=JZmq%2FQnsjyCuB1j%2Bb43c1g%3D%3D%2CnHUHLY90v%2F%2BY9eKuFMalNXrIQB7Ot5tqNDH6WTNqS8zYJTO3hP4QwSoU7vV58RW%2B%2B0vP9gEwD%2BTAT%2FU16C2inwiLQvhrztFPOCmsdGKW3XzT5m0EXTRIzdy1htOOiE%2BwEAlAmn%2BOG%2BNSFp6ae2ElHWG5RLMU%2FQqNYHNRLK7i%2BgSjVSxuzC%2FVUw%3D%3D
    path: ./ruleset/reject-custom.yaml
  proxy-custom: # 自定义代理
    type: http
    behavior: classical
    url: https://url-transfer.deno.dev/?content=HiCjMuooW2gmtuiOtXX8PA%3D%3D%2C7zoNAZkyV5boaUE%2FFgcq0rWG%2BzgTOD1criNyJhYBca7VjvtgfMY0k631hFQuU64nEuJofJab6uHo5HMjc4tqTgI%2BUuVatcCa8d9lPiQa5Sz1sL6ZrXh%2Bny9Fn21A%2BwiewusWu8bc7a4LQm%2F018y0KR4PB5%2F%2Fou3LR0liSB%2F8nPu%2BoDd%2FdFKr
    path: ./ruleset/proxy-custom.yaml
  direct-custom: # 自定义直连
    type: http
    behavior: classical
    url: https://url-transfer.deno.dev/?content=p7IAvqO9%2F7Ci69MlFgkM3A%3D%3D%2Cx2QE4ADC5biByKFHecCxzvVF8Y309XnGAt2zC0yx3Lo6MowTzYJ%2FBqBqHOEZTXjegoqJUtYkICpPI6D9DUj6UUfZF3tbI8NChO3Ns2XaIYB7PV3gdrfdBzk57xCu7%2BRz6%2F0TMUB9cyBtPOASpQFg0d%2FXDjtqk2QFnpt6%2F7ts%2FuftrdGsU0hkOg%3D%3D
    path: ./ruleset/direct-custom.yaml


  reject-patch: # 黑名单补丁列表，域名匹配时使用
    type: http
    behavior: domain
    url: https://url-transfer.deno.dev/?content=ecbzMPci6Et8ZTD6U2OMlQ%3D%3D%2CiEzOkIbyyk4FlVGoERP9E1OCFUFHCn6E4LkQZ7yuIONKCOi9KZiIiYjXxhbe2mOdKPWNpuxcbYEiIh1labGJXDjmIjz%2BNTn94oQLCNfGpApTqUYQ%2BxwuaOXvYTQzcfWwdK7wfSYjWnn2MNLDK56q8Xr1lVnkLyfC1OXPKRX1wzMr2APNYBPW
    path: ./ruleset/reject-patch.yaml
  proxy-patch: # 代理补丁
    type: http
    behavior: domain
    url: https://url-transfer.deno.dev/?content=TQse8H8h%2FGJeJztHuEms%2BA%3D%3D%2CWl%2FcLGUTbEFfMreNzieGdLGN4NncIb2L80rEFM5XCyme5wKDubOsQcPyoIJN11eDuFuLMFD%2Bcq%2FddpLb505GL110rXj%2FS83PaVLa34GybxmxJKGQqG7THqW5h0w3LQvM1CbuG%2FvDvs4QO2Gq3D%2BF%2BHelLb72mnnKtQjlJGxZS%2BBnoENj1i0%3D
    path: ./ruleset/proxy-patch.yaml
  direct-patch: # 直连补丁
    type: http
    behavior: domain
    url: https://url-transfer.deno.dev/?content=LlwShopgjF3qYbqZzDZvaA%3D%3D%2Ccc7doPYds5GaTiDBZ4dWToyO6%2FJwZd%2B6WjJ4ycEnahNrqDD312OXQh2j%2Bxn8lp2VW7aqauUHBiJc0Jy%2Fe8va4UakjYpNQGTRpyktBRyC9a98NqfR06UPSDXk%2Fgv4qGUpXvvZt2jGHoCA2N4%2B2ZjuHM74Rc1zUVoowbEhAr1qvsBQk%2BuUkcjC
    path: ./ruleset/direct-patch.yaml


  # 调用第三方规则
  # 直连
  direct:
    type: http
    behavior: domain
    url: https://url-transfer.deno.dev/?content=w9afRXskphDp1iAi0JC1cQ%3D%3D%2Cgq%2BHkgRaGBF6RlJ6Dv47fmaGSFco4vw4y%2F7z8qidp8KkunxEL42q6MhOpRTiw7uk3%2B9AfO6MwZVEk2tZlqH2%2F7HJhZ9SduKcQ3ycE10QMY9fXIdXAmGOjU%2Bts833
    path: ./ruleset/direct.yaml
  # 广告
  reject:
    type: http
    behavior: domain
    url: https://url-transfer.deno.dev/?content=Bkf%2FCbDLCCxqpca%2F2HY1Ng%3D%3D%2CpRbw91GsozcCndiTSQunraRkdeuZ4f2SDyx98hcyR4K6kUbuWqxdsRZumiT%2FrowTcAxM9Xq9GfMsdO6JnkemdjlsE9z8usknViW5p%2B%2FnVqovpydr2%2FZ0dt0r%2BPn%2B
    path: ./ruleset/reject.yaml
  # 私有专用域名，如：路由器登录
  private:
    type: http
    behavior: domain
    url: https://url-transfer.deno.dev/?content=32K107py18FBzMW1nIeHPQ%3D%3D%2CXCr5eMiKwNukKkNpSxZuYiMZ6ELtmR1ZMDEJzxBJs3juX5HUcy9zAMW4LLriz3r4Ok3%2F3WFFKB83RtXxkIxsK1ADYlZHW1gPJlgtZ%2F2K8cKR7B4C4JRSn%2BdkdHVihg%3D%3D
    path: ./ruleset/private.yaml
  # 中国大陆域名，国外服务器 IP 地址列表
  cncidr:
    type: http
    behavior: ipcidr
    url: https://url-transfer.deno.dev/?content=oEuhdikzQD%2FfCm7RePHNzA%3D%3D%2COP378jr%2B2H3KUbKRdJimiV6M0HaOZSxVvXXqtsCK5DeImB8KaWisWvfbZ2cDAicJ62JYqjT6lNg6CZrD13m0didGyoiPsVnT5bjNRyLxLwO0D1K4lQ3JX89U%2FmJP
    path: ./ruleset/cncidr.yaml


# 一个网络请求可能基于域名，也可能基于 IP，Clash 根据规则配置对请求进行处理
#
# `rules` 规则配置，它的规则类型 `behavior` 为 classical，不支持通配符。格式为: 
# 匹配类型, 匹配条件, 流量走向（有 阻止(REJECT)，直连(DIRECT)，和策略组）[, 禁止 DNS 解析（可选）]
#
# 按由上到下顺序匹配
rules:
  ###############################################
  #
  # - RULE-SET,rule-set-example,DIRECT           # 规则集匹配，引用规则提供者(rule-providers)的定义
  # - DOMAIN,example.com,proxy-provider-example  # 完全匹配域名字符串，不能加引号，引号被当作普通字符串
  # - IP-CIDR,0.0.0.0/32,DIRECT                  # IP 段匹配。因为域名与 IP 不是同一个东西，所以对于基于域名的请求，要先进行 DNS 解析得到 IP 后才能对比
  # - IP-CIDR6,0000::1/64,DIRECT                 # IPv6 的 CIDR 匹配，需要在 Clash 设置页面里开启 IPv6
  # - SRC-IP-CIDR,0.0.0.0/32,DIRECT,no-resolve   # 出站子网 IP 段。no-resolve: 不做 DNS 解析。每一个涉及 DNS 解析的规则都应该加 no-resolve，防止 DNS 泄露
  # - DOMAIN-SUFFIX,baidu.com,DIRECT             # 匹配域名尾缀
  # - DOMAIN-KEYWORD,baidu,DIRECT                # 匹配域名关键字
  # - SRC-PORT,9090,DIRECT                       # 匹配出站端口
  # - DST-PORT,80,PROXY                          # 匹配到站端口
  # - PROCESS-NAME,QQ.exe,DIRECT                 # 匹配进程名
  # - GEOIP,LAN,DIRECT,no-resolve                # 地理 IP，地区编码匹配。LAN: 局域网
  #
  ###############################################


  # 本地 DNS 解析是错误的思维，代理服务器会做解析，应避免本地解析
  # 规则优先权应这样排序：REJECT -> PROXY -> DIRECT

  - DOMAIN,yacd.haishan.me,DIRECT # Clash 调试页面
  - DOMAIN,clash.razord.top,DIRECT # Clash 调试页面

  ## 自定义规则
  - RULE-SET,reject-custom,REJECT
  - RULE-SET,proxy-custom,SELECT-PROXY
  - RULE-SET,direct-custom,DIRECT

  ## 对别人整理的规则打补丁
  - RULE-SET,reject-patch,REJECT
  - RULE-SET,proxy-patch,SELECT-PROXY
  - RULE-SET,direct-patch,DIRECT
  
  ## 别人整理的规则
  - RULE-SET,reject,REJECT
  - RULE-SET,private,DIRECT
  - RULE-SET,direct,DIRECT
  - RULE-SET,cncidr,DIRECT,no-resolve

  - GEOIP,LAN,DIRECT,no-resolve  # 局域网走直连
  - GEOIP,CN,DIRECT,no-resolve   # 国内地址走直连

  - MATCH,SELECT-PROXY